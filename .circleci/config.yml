version: 2.1

orbs:
  aws-cli: circleci/aws-cli@2.1.0

jobs:
  test:
    docker:
      - image: cimg/go:1.17
      - image: cimg/postgres:14.4
        environment:
            POSTGRES_USER: postgres #違うuserでは動かなかった
            POSTGRES_PASSWORD: ${TEST_POSTGRES_PASSWORD}
            POSTGRES_DB: circle_testing #これじゃないと動かなかった
    working_directory: ~/go-meal-record
    steps:
      - checkout
      - run:
          working_directory: app/test #app/testディレクトに移動
          name: go test
          command: go test -v
    environment:
      GO_ENVIRONMENT: test
      IS_CIRCLECI_TEST: true
      CGO_ENABLED: 0
      TEST_POSTGRES_USER: postgres
      TEST_POSTGRES_DB: circle_testing

  deploy:
    docker: #これ必要ないと思うけどないとdockerという項目ないとエラーなので
      - image: cimg/go:1.17
    working_directory: ~/go-meal-record
    steps:
        - checkout
        - setup_remote_docker
        - aws-cli/install
        - aws-cli/setup
        - run:
            working_directory: app/ #appディレクトに移動
            name: docker build and push to ecr and service update
            command: |
              docker build -t go-meal-record-app-production  -f ./Dockerfile.production . --platform amd64
              aws ecr get-login-password --region ${AWS_REGION} | docker login --username AWS --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com
              docker tag ${PRODUCTION_IMAGE_NAME}:latest ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${ECR_IMAGE_NAME}:latest
              docker push ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${ECR_IMAGE_NAME}:latest
              aws ecs update-service --cluster ${CLUSTER_NAME} --service ${SERVICE_NAME} --task-definition ${TASK_NAME} --force-new-deployment

workflows:
  version: 2
  test_and_deploy:
    jobs:
      - test
      - deploy:
          requires:
            - test
          filters:
            branches:
              only: main